#!/usr/bin/env python

from mb_master import MBMaster
import argparser

global args, log

def init_log():
    if args.log_file is not None and args.daemon == False:
        logging.basicConfig(format='%(asctime)s %(name)s[%(process)d] %(levelname)s: %(message)s', filename=args.log_file)
    else:
        logging.basicConfig(format='%(asctime)s %(name)s[%(process)d] %(levelname)s: %(message)s')
    if args.log_level is not None:
        log.setLevel(args.log_level_override)
    else:

if __name__ == '__main__':
    aparser = argparse.ArgumentParser(description='Modbus Register Logging Daemon')
    aparser.add_argument('daemon', dest='daemon', action='store_const', const=True, default=False, help='run in daemon mode (must be root, log to syslog, file output)')
    aparser.add_argument('debug', dest='log_level', action='store_const', const=logging.DEBUG, default=None, help='request debugging output in the log (over-rides config file setting)')
    aparser.add_argument('config-file', dest='config_file', default='/etc/fml.conf', help='specify the path to the config file')
    aparser.add_argument('log-file', dest='log_file', default=None, help='send logging to this file instead of stderr')
    args = aparser.parse_args()

    init_log()

    master = MBMaster(args._config_file)
    master.monitor()


